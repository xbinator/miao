import{aE as n,aC as s,aQ as p}from"./index-8hLDyTlh.js";const e={class:"markdown-body"},r={title:"布局",order:1},d="布局",i=!0,k={__name:"index",setup(o,{expose:a}){return a({frontmatter:{group:{title:"布局",order:1},subtitle:"布局",simulator:!0}}),(l,t)=>(s(),n("div",e,t[0]||(t[0]=[p(`<p>协助进行页面级整体布局。</p><h2 id="何时使用" tabindex="-1">何时使用 <a class="anchor" href="#何时使用" aria-hidden="true">#</a></h2><p>用于移动端整体页面布局</p><h2 id="引入" tabindex="-1">引入 <a class="anchor" href="#引入" aria-hidden="true">#</a></h2><p>通过以下方式来全局注册组件</p><pre class="language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Layout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@miao/engine&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h2 id="代码演示" tabindex="-1">代码演示 <a class="anchor" href="#代码演示" aria-hidden="true">#</a></h2><h3 id="基础" tabindex="-1">基础 <a class="anchor" href="#基础" aria-hidden="true">#</a></h3><p>基础用法</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MLayout</span> <span class="token attr-name">deep-think</span> <span class="token attr-name">net-search</span> <span class="token attr-name">:skills</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>skills<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MBubbleText</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>哦！你好啊！我是蒙奇·D·路飞！我要成为海贼王的男人！<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MBubbleText</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>嘿嘿！你是谁啊？要不要一起吃肉？ <span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MBubbleText</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> 喂——！！<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MBubbleText</span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>吃吃吃！你就知道吃！钱才是最重要的好吗？ <span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MLayout</span><span class="token punctuation">&gt;</span></span>
</code></pre><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> skills <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;智能体1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;智能体2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;智能体3&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;智能体4&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><h2 id="api" tabindex="-1">API <a class="anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="props" tabindex="-1">Props <a class="anchor" href="#props" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>placeholder</td><td>输入框占位符文本</td><td>string</td><td>‘请输入’</td></tr><tr><td>loading</td><td>发送消息时的加载状态</td><td>boolean</td><td>false</td></tr><tr><td>finished</td><td>数据加载完成状态</td><td>boolean</td><td>false</td></tr><tr><td>value</td><td>输入框中的内容</td><td>string</td><td>‘’</td></tr><tr><td>skills</td><td>技能列表</td><td>SkillProps[]</td><td>[]</td></tr><tr><td>deepThink</td><td>是否使用深度思考功能</td><td>boolean</td><td>false</td></tr><tr><td>netSearch</td><td>是否使用联网搜索功能</td><td>boolean</td><td>false</td></tr><tr><td>allowRefresh</td><td>是否可以使用下拉加载</td><td>boolean</td><td>false</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="anchor" href="#事件" aria-hidden="true">#</a></h3><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>load</td><td>滚动下拉加载事件</td><td>() =&gt; void</td></tr><tr><td>send</td><td>发送事件</td><td>(result: SenderSendEvent)=&gt; void</td></tr><tr><td>cancel</td><td>取消事件</td><td>() =&gt; void</td></tr></tbody></table><h3 id="skillprops 类型定义" tabindex="-1">SkillProps 类型定义 <a class="anchor" href="#skillprops 类型定义" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>按钮文本</td><td>string</td><td>-</td></tr><tr><td>icon</td><td>按钮图标</td><td>string</td><td>-</td></tr><tr><td>type</td><td>按钮类型</td><td>‘primary’ | ‘default’</td><td>‘default’</td></tr></tbody></table><p><code>SenderSendEvent</code> 事件请参考 <a href="./sender">Sender.send 事件</a></p>`,19)])))}};export{k as default,r as group,i as simulator,d as subtitle};
