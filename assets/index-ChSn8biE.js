import{aE as n,aC as s,aQ as e}from"./index-8hLDyTlh.js";const o={class:"markdown-body"},l={title:"表达",order:0},u="输入框",i=!0,h={__name:"index",setup(p,{expose:a}){return a({frontmatter:{group:{title:"表达",order:0},subtitle:"输入框",simulator:!0}}),(r,t)=>(s(),n("div",o,t[0]||(t[0]=[e(`<p>用于聊天的输入框组件</p><h2 id="何时使用" tabindex="-1">何时使用 <a class="anchor" href="#何时使用" aria-hidden="true">#</a></h2><p>需要构建一个对话场景下的输入框</p><h2 id="代码演示" tabindex="-1">代码演示 <a class="anchor" href="#代码演示" aria-hidden="true">#</a></h2><h3 id="基础" tabindex="-1">基础 <a class="anchor" href="#基础" aria-hidden="true">#</a></h3><p>基础用法，受控进行状态管理</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MSender</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MSender</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MSender</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Force as loading<span class="token punctuation">&quot;</span></span> <span class="token attr-name">loading</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;Hello? this is M!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><h3 id="语音输入" tabindex="-1">语音输入 <a class="anchor" href="#语音输入" aria-hidden="true">#</a></h3><p>语音输入，需要用户同意麦克风权限，仅只支持 移动端</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MSender</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入<span class="token punctuation">&quot;</span></span> <span class="token attr-name">allow-speech</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><h2 id="api" tabindex="-1">API <a class="anchor" href="#api" aria-hidden="true">#</a></h2><h3 id="props" tabindex="-1">Props <a class="anchor" href="#props" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>placeholder</td><td>输入框提示文字</td><td>string</td><td>-</td></tr><tr><td>value</td><td>输入框绑定值</td><td>string</td><td>-</td></tr><tr><td>loading</td><td>是否加载中</td><td>boolean</td><td>false</td></tr><tr><td>allowSpeech</td><td>是否允许语音</td><td>boolean</td><td>false</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="anchor" href="#事件" aria-hidden="true">#</a></h3><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>send</td><td>发送按钮点击事件</td><td>({ content: string; type: ‘text’ }) =&gt; void | ({ file: Blob; type: ‘recorder’ }) =&gt; void</td></tr><tr><td>actions</td><td>操作回调事件</td><td>(options: SenderActionOptions) =&gt; void</td></tr></tbody></table><h3 id="senderactionoptions 类型定义" tabindex="-1">SenderActionOptions 类型定义 <a class="anchor" href="#senderactionoptions 类型定义" aria-hidden="true">#</a></h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>‘error’</td><td>string</td><td>-</td></tr><tr><td>message</td><td>麦克风无法打开，出现错误提示</td><td>string</td><td>-</td></tr></tbody></table>`,18)])))}};export{h as default,l as group,i as simulator,u as subtitle};
